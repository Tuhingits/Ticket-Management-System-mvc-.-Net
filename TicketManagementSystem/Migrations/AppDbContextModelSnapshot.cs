// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicketManagementSystem.Models;

namespace TicketManagementSystem.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TicketManagementSystem.Models.Cart", b =>
                {
                    b.Property<int>("C_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CartLineCl_Id");

                    b.Property<string>("Date")
                        .IsRequired();

                    b.Property<int?>("FeedBackFb_Id");

                    b.Property<int?>("LaunchL_Id");

                    b.Property<int?>("PaymentP_Id");

                    b.Property<int?>("PromoPr_Id");

                    b.Property<int?>("RegistationU_Id");

                    b.Property<string>("TotalTk")
                        .IsRequired();

                    b.HasKey("C_Id");

                    b.HasIndex("CartLineCl_Id");

                    b.HasIndex("FeedBackFb_Id");

                    b.HasIndex("LaunchL_Id");

                    b.HasIndex("PaymentP_Id");

                    b.HasIndex("PromoPr_Id");

                    b.HasIndex("RegistationU_Id");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("TicketManagementSystem.Models.CartLine", b =>
                {
                    b.Property<int>("Cl_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CartC_Id");

                    b.Property<string>("Catarory")
                        .IsRequired();

                    b.Property<int?>("CavinDetailsCv_Id");

                    b.Property<string>("Price")
                        .IsRequired();

                    b.HasKey("Cl_Id");

                    b.HasIndex("CartC_Id");

                    b.HasIndex("CavinDetailsCv_Id");

                    b.ToTable("CartLines");
                });

            modelBuilder.Entity("TicketManagementSystem.Models.CavinDetails", b =>
                {
                    b.Property<int>("Cv_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CartLineCl_Id");

                    b.Property<string>("CavinCatagory")
                        .IsRequired();

                    b.Property<string>("CavinNumber")
                        .IsRequired();

                    b.Property<int?>("LaunchL_Id");

                    b.Property<string>("Position")
                        .IsRequired();

                    b.Property<double>("Rent");

                    b.HasKey("Cv_Id");

                    b.HasIndex("CartLineCl_Id");

                    b.HasIndex("LaunchL_Id");

                    b.ToTable("CavinDetails");
                });

            modelBuilder.Entity("TicketManagementSystem.Models.FeedBack", b =>
                {
                    b.Property<int>("Fb_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CartC_Id");

                    b.Property<string>("Details")
                        .IsRequired();

                    b.Property<string>("Filter")
                        .IsRequired();

                    b.Property<int?>("RegistationU_Id");

                    b.HasKey("Fb_Id");

                    b.HasIndex("CartC_Id");

                    b.HasIndex("RegistationU_Id");

                    b.ToTable("FeedBacks");
                });

            modelBuilder.Entity("TicketManagementSystem.Models.Launch", b =>
                {
                    b.Property<int>("L_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CartC_Id");

                    b.Property<int?>("CavinDetailsCv_Id");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int?>("OwnerO_Id");

                    b.Property<int?>("PromoForUserPFU_Id");

                    b.Property<string>("Rout")
                        .IsRequired();

                    b.Property<int?>("SchedulS_Id");

                    b.HasKey("L_Id");

                    b.HasIndex("CartC_Id");

                    b.HasIndex("CavinDetailsCv_Id");

                    b.HasIndex("OwnerO_Id");

                    b.HasIndex("PromoForUserPFU_Id");

                    b.HasIndex("SchedulS_Id");

                    b.ToTable("Launches");
                });

            modelBuilder.Entity("TicketManagementSystem.Models.Owner", b =>
                {
                    b.Property<int>("O_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<int?>("LaunchL_Id");

                    b.Property<string>("OwnerName")
                        .IsRequired();

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.HasKey("O_Id");

                    b.HasIndex("LaunchL_Id");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("TicketManagementSystem.Models.Payment", b =>
                {
                    b.Property<int>("P_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CartC_Id");

                    b.Property<string>("PaymentOption")
                        .IsRequired();

                    b.Property<string>("PaymentStatus")
                        .IsRequired();

                    b.Property<int?>("RegistationU_Id");

                    b.HasKey("P_Id");

                    b.HasIndex("CartC_Id");

                    b.HasIndex("RegistationU_Id");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("TicketManagementSystem.Models.Promo", b =>
                {
                    b.Property<int>("Pr_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CartC_Id");

                    b.Property<string>("Discount")
                        .IsRequired();

                    b.Property<DateTime>("EndDate");

                    b.Property<double>("MaxAmount");

                    b.Property<string>("PromoCode")
                        .IsRequired();

                    b.Property<int?>("PromoForUserPFU_Id");

                    b.Property<int?>("PromoPr_Id");

                    b.Property<int?>("PromoUserPU_Id");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("Pr_Id");

                    b.HasIndex("CartC_Id");

                    b.HasIndex("PromoForUserPFU_Id");

                    b.HasIndex("PromoPr_Id");

                    b.HasIndex("PromoUserPU_Id");

                    b.ToTable("Promos");
                });

            modelBuilder.Entity("TicketManagementSystem.Models.PromoForLaunch", b =>
                {
                    b.Property<int>("PFL_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("U_Id");

                    b.HasKey("PFL_Id");

                    b.HasIndex("U_Id");

                    b.ToTable("PromoForLaunches");
                });

            modelBuilder.Entity("TicketManagementSystem.Models.PromoForUser", b =>
                {
                    b.Property<int>("PFU_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LaunchL_Id");

                    b.Property<int?>("PromoPr_Id");

                    b.HasKey("PFU_Id");

                    b.HasIndex("LaunchL_Id");

                    b.HasIndex("PromoPr_Id");

                    b.ToTable("PromoForUsers");
                });

            modelBuilder.Entity("TicketManagementSystem.Models.PromoUser", b =>
                {
                    b.Property<int>("PU_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Date")
                        .IsRequired();

                    b.Property<int?>("PromoPr_Id");

                    b.Property<int?>("RegistationU_Id");

                    b.Property<string>("Time")
                        .IsRequired();

                    b.HasKey("PU_Id");

                    b.HasIndex("PromoPr_Id");

                    b.HasIndex("RegistationU_Id");

                    b.ToTable("PromoUsers");
                });

            modelBuilder.Entity("TicketManagementSystem.Models.Registation", b =>
                {
                    b.Property<int>("U_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CartC_Id");

                    b.Property<string>("ConfirmPassword");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<int?>("FeedBackFb_Id");

                    b.Property<string>("Gender")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(16);

                    b.Property<int?>("PaymentP_Id");

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.Property<int?>("PromoUserPU_Id");

                    b.HasKey("U_Id");

                    b.HasIndex("CartC_Id");

                    b.HasIndex("FeedBackFb_Id");

                    b.HasIndex("PaymentP_Id");

                    b.HasIndex("PromoUserPU_Id");

                    b.ToTable("Registations");
                });

            modelBuilder.Entity("TicketManagementSystem.Models.Schedul", b =>
                {
                    b.Property<int>("S_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Date")
                        .IsRequired();

                    b.Property<string>("From")
                        .IsRequired();

                    b.Property<int?>("LaunchL_Id");

                    b.Property<string>("Time")
                        .IsRequired();

                    b.Property<string>("To")
                        .IsRequired();

                    b.HasKey("S_Id");

                    b.HasIndex("LaunchL_Id");

                    b.ToTable("Scheduls");
                });

            modelBuilder.Entity("TicketManagementSystem.Models.Cart", b =>
                {
                    b.HasOne("TicketManagementSystem.Models.CartLine")
                        .WithMany("Carts")
                        .HasForeignKey("CartLineCl_Id");

                    b.HasOne("TicketManagementSystem.Models.FeedBack")
                        .WithMany("Carts")
                        .HasForeignKey("FeedBackFb_Id");

                    b.HasOne("TicketManagementSystem.Models.Launch", "Launch")
                        .WithMany()
                        .HasForeignKey("LaunchL_Id");

                    b.HasOne("TicketManagementSystem.Models.Payment")
                        .WithMany("Carts")
                        .HasForeignKey("PaymentP_Id");

                    b.HasOne("TicketManagementSystem.Models.Promo", "Promo")
                        .WithMany()
                        .HasForeignKey("PromoPr_Id");

                    b.HasOne("TicketManagementSystem.Models.Registation", "Registation")
                        .WithMany()
                        .HasForeignKey("RegistationU_Id");
                });

            modelBuilder.Entity("TicketManagementSystem.Models.CartLine", b =>
                {
                    b.HasOne("TicketManagementSystem.Models.Cart", "Cart")
                        .WithMany()
                        .HasForeignKey("CartC_Id");

                    b.HasOne("TicketManagementSystem.Models.CavinDetails", "CavinDetails")
                        .WithMany()
                        .HasForeignKey("CavinDetailsCv_Id");
                });

            modelBuilder.Entity("TicketManagementSystem.Models.CavinDetails", b =>
                {
                    b.HasOne("TicketManagementSystem.Models.CartLine")
                        .WithMany("Cavins")
                        .HasForeignKey("CartLineCl_Id");

                    b.HasOne("TicketManagementSystem.Models.Launch", "Launch")
                        .WithMany()
                        .HasForeignKey("LaunchL_Id");
                });

            modelBuilder.Entity("TicketManagementSystem.Models.FeedBack", b =>
                {
                    b.HasOne("TicketManagementSystem.Models.Cart", "Cart")
                        .WithMany()
                        .HasForeignKey("CartC_Id");

                    b.HasOne("TicketManagementSystem.Models.Registation", "Registation")
                        .WithMany()
                        .HasForeignKey("RegistationU_Id");
                });

            modelBuilder.Entity("TicketManagementSystem.Models.Launch", b =>
                {
                    b.HasOne("TicketManagementSystem.Models.Cart")
                        .WithMany("Launches")
                        .HasForeignKey("CartC_Id");

                    b.HasOne("TicketManagementSystem.Models.CavinDetails")
                        .WithMany("Launches")
                        .HasForeignKey("CavinDetailsCv_Id");

                    b.HasOne("TicketManagementSystem.Models.Owner")
                        .WithMany("Launches")
                        .HasForeignKey("OwnerO_Id");

                    b.HasOne("TicketManagementSystem.Models.PromoForUser")
                        .WithMany("Launches")
                        .HasForeignKey("PromoForUserPFU_Id");

                    b.HasOne("TicketManagementSystem.Models.Schedul")
                        .WithMany("Launches")
                        .HasForeignKey("SchedulS_Id");
                });

            modelBuilder.Entity("TicketManagementSystem.Models.Owner", b =>
                {
                    b.HasOne("TicketManagementSystem.Models.Launch", "Launch")
                        .WithMany()
                        .HasForeignKey("LaunchL_Id");
                });

            modelBuilder.Entity("TicketManagementSystem.Models.Payment", b =>
                {
                    b.HasOne("TicketManagementSystem.Models.Cart", "Cart")
                        .WithMany()
                        .HasForeignKey("CartC_Id");

                    b.HasOne("TicketManagementSystem.Models.Registation", "Registation")
                        .WithMany()
                        .HasForeignKey("RegistationU_Id");
                });

            modelBuilder.Entity("TicketManagementSystem.Models.Promo", b =>
                {
                    b.HasOne("TicketManagementSystem.Models.Cart")
                        .WithMany("Promos")
                        .HasForeignKey("CartC_Id");

                    b.HasOne("TicketManagementSystem.Models.PromoForUser")
                        .WithMany("Promos")
                        .HasForeignKey("PromoForUserPFU_Id");

                    b.HasOne("TicketManagementSystem.Models.Promo")
                        .WithMany("Promos")
                        .HasForeignKey("PromoPr_Id");

                    b.HasOne("TicketManagementSystem.Models.PromoUser")
                        .WithMany("Promos")
                        .HasForeignKey("PromoUserPU_Id");
                });

            modelBuilder.Entity("TicketManagementSystem.Models.PromoForLaunch", b =>
                {
                    b.HasOne("TicketManagementSystem.Models.Registation", "Registation")
                        .WithMany("PromoForLaunche")
                        .HasForeignKey("U_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TicketManagementSystem.Models.PromoForUser", b =>
                {
                    b.HasOne("TicketManagementSystem.Models.Launch", "Launch")
                        .WithMany()
                        .HasForeignKey("LaunchL_Id");

                    b.HasOne("TicketManagementSystem.Models.Promo", "Promo")
                        .WithMany()
                        .HasForeignKey("PromoPr_Id");
                });

            modelBuilder.Entity("TicketManagementSystem.Models.PromoUser", b =>
                {
                    b.HasOne("TicketManagementSystem.Models.Promo", "Promo")
                        .WithMany()
                        .HasForeignKey("PromoPr_Id");

                    b.HasOne("TicketManagementSystem.Models.Registation", "Registation")
                        .WithMany()
                        .HasForeignKey("RegistationU_Id");
                });

            modelBuilder.Entity("TicketManagementSystem.Models.Registation", b =>
                {
                    b.HasOne("TicketManagementSystem.Models.Cart")
                        .WithMany("Registations")
                        .HasForeignKey("CartC_Id");

                    b.HasOne("TicketManagementSystem.Models.FeedBack")
                        .WithMany("Registations")
                        .HasForeignKey("FeedBackFb_Id");

                    b.HasOne("TicketManagementSystem.Models.Payment")
                        .WithMany("Registations")
                        .HasForeignKey("PaymentP_Id");

                    b.HasOne("TicketManagementSystem.Models.PromoUser")
                        .WithMany("Registations")
                        .HasForeignKey("PromoUserPU_Id");
                });

            modelBuilder.Entity("TicketManagementSystem.Models.Schedul", b =>
                {
                    b.HasOne("TicketManagementSystem.Models.Launch", "Launch")
                        .WithMany()
                        .HasForeignKey("LaunchL_Id");
                });
#pragma warning restore 612, 618
        }
    }
}
